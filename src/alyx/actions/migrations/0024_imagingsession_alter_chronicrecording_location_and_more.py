# Generated by Django 5.1.3 on 2024-12-06 17:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('actions', '0023_data_repository_inclusion_chain'),
        ('misc', '0013_alter_lab_timezone'),
        ('subjects', '0013_alter_strain_name_alter_subject_nickname'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ImagingSession',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('actions.session',),
        ),
        migrations.AlterField(
            model_name='chronicrecording',
            name='location',
            field=models.ForeignKey(blank=True, help_text='The physical location at which the action was performed.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='misc.lablocation'),
        ),
        migrations.AlterField(
            model_name='chronicrecording',
            name='procedures',
            field=models.ManyToManyField(blank=True, help_text='The procedure(s) performed.', to='actions.proceduretype'),
        ),
        migrations.AlterField(
            model_name='chronicrecording',
            name='subject',
            field=models.ForeignKey(help_text='The subject on which this action was performed.', on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='subjects.subject'),
        ),
        migrations.AlterField(
            model_name='chronicrecording',
            name='users',
            field=models.ManyToManyField(blank=True, help_text='The user(s) involved in this action.', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='notification',
            name='notification_type',
            field=models.CharField(choices=[('responsible_user_change', 'responsible user has changed'), ('mouse_underweight', 'mouse is underweight'), ('mouse_water', 'water to give to mouse'), ('mouse_training', 'check training days'), ('mouse_not_weighed', 'no weight entered for date')], max_length=32),
        ),
        migrations.AlterField(
            model_name='notificationrule',
            name='notification_type',
            field=models.CharField(choices=[('responsible_user_change', 'responsible user has changed'), ('mouse_underweight', 'mouse is underweight'), ('mouse_water', 'water to give to mouse'), ('mouse_training', 'check training days'), ('mouse_not_weighed', 'no weight entered for date')], max_length=32),
        ),
        migrations.AlterField(
            model_name='otheraction',
            name='location',
            field=models.ForeignKey(blank=True, help_text='The physical location at which the action was performed.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='misc.lablocation'),
        ),
        migrations.AlterField(
            model_name='otheraction',
            name='procedures',
            field=models.ManyToManyField(blank=True, help_text='The procedure(s) performed.', to='actions.proceduretype'),
        ),
        migrations.AlterField(
            model_name='otheraction',
            name='subject',
            field=models.ForeignKey(help_text='The subject on which this action was performed.', on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='subjects.subject'),
        ),
        migrations.AlterField(
            model_name='otheraction',
            name='users',
            field=models.ManyToManyField(blank=True, help_text='The user(s) involved in this action.', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='session',
            name='location',
            field=models.ForeignKey(blank=True, help_text='The physical location at which the action was performed.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='misc.lablocation'),
        ),
        migrations.AlterField(
            model_name='session',
            name='procedures',
            field=models.ManyToManyField(blank=True, help_text='The procedure(s) performed.', to='actions.proceduretype'),
        ),
        migrations.AlterField(
            model_name='session',
            name='subject',
            field=models.ForeignKey(help_text='The subject on which this action was performed.', on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='subjects.subject'),
        ),
        migrations.AlterField(
            model_name='session',
            name='users',
            field=models.ManyToManyField(blank=True, help_text='The user(s) involved in this action.', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='surgery',
            name='procedures',
            field=models.ManyToManyField(blank=True, help_text='The procedure(s) performed.', to='actions.proceduretype'),
        ),
        migrations.AlterField(
            model_name='surgery',
            name='subject',
            field=models.ForeignKey(help_text='The subject on which this action was performed.', on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='subjects.subject'),
        ),
        migrations.AlterField(
            model_name='surgery',
            name='users',
            field=models.ManyToManyField(blank=True, help_text='The user(s) involved in this action.', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='virusinjection',
            name='location',
            field=models.ForeignKey(blank=True, help_text='The physical location at which the action was performed.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='misc.lablocation'),
        ),
        migrations.AlterField(
            model_name='virusinjection',
            name='procedures',
            field=models.ManyToManyField(blank=True, help_text='The procedure(s) performed.', to='actions.proceduretype'),
        ),
        migrations.AlterField(
            model_name='virusinjection',
            name='subject',
            field=models.ForeignKey(help_text='The subject on which this action was performed.', on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='subjects.subject'),
        ),
        migrations.AlterField(
            model_name='virusinjection',
            name='users',
            field=models.ManyToManyField(blank=True, help_text='The user(s) involved in this action.', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='waterrestriction',
            name='location',
            field=models.ForeignKey(blank=True, help_text='The physical location at which the action was performed.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='misc.lablocation'),
        ),
        migrations.AlterField(
            model_name='waterrestriction',
            name='procedures',
            field=models.ManyToManyField(blank=True, help_text='The procedure(s) performed.', to='actions.proceduretype'),
        ),
        migrations.AlterField(
            model_name='waterrestriction',
            name='subject',
            field=models.ForeignKey(help_text='The subject on which this action was performed.', on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)ss', to='subjects.subject'),
        ),
        migrations.AlterField(
            model_name='waterrestriction',
            name='users',
            field=models.ManyToManyField(blank=True, help_text='The user(s) involved in this action.', to=settings.AUTH_USER_MODEL),
        ),
    ]
