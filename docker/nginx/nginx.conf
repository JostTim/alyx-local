events {}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    resolver 127.0.0.11 valid=30s;  # Docker's internal DNS server

    server {
        listen 80;

        location /static/ {
            alias /app/uploaded/static/;
            expires 30d;
        }

        location /media/ {
            alias /app/uploaded/media/;
            expires 30d;
        }

        location / {
            proxy_pass http://django_server:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /services/celery {
            # using set variable allows this to make route to upstream_celery optional, 
            # and work even if it is not available at config time, but later on.
            set $upstream_celery http://celery_server:5001; 
            proxy_pass $upstream_celery;
            proxy_set_header Host celery_server;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;  # Pass the Authorization header
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            proxy_intercept_errors on;
            error_page 502 503 504 = /services/down?service_name=celery;
            #In case it is not up, we redirect to django's /service_down page with celery as service_name argument
        }

        location /services/rabbitmq {
            set $upstream_rabbitmq http://rabbitmq:15672; 
            proxy_pass $upstream_rabbitmq;
            proxy_set_header Host rabbitmq;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;  # Pass the Authorization header
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            proxy_intercept_errors on;
            error_page 502 503 504 = /services/down?service_name=rabbitmq;
            #In case it is not up, we redirect to django's /service_down page with celery as service_name argument
        }
    }
}