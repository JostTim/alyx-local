# Generated by Django 4.1.3 on 2023-06-13 15:49

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0013_migrating_dataset_type_model'),
    ]

    operations = [
        migrations.AddField(
            model_name='datasettype',
            name='attribute',
            field=models.CharField(default='__undefined', help_text='attribute (second part of the name) as per alf convention', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datasettype',
            name='object',
            field=models.CharField(default='__undefined', help_text='object (first part of the name) as per alf convention described here : https://int-brain-lab.github.io/ONE/alf_intro.html#dataset-name', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='filerecord',
            name='file_name',
            field=models.CharField(default='__undefined', help_text='file name within repository. Cannot contain a directory path', max_length=1000, validators=[django.core.validators.RegexValidator('(?P<object>.*)\\.(?P<attribute>.*)\\.(?P<extension>.*)', code='invalid_alf', message='Invalid alyx file name.')]),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='datarepository',
            name='globus_is_personal',
            field=models.BooleanField(blank=True, default=False, help_text='whether the Globus endpoint is personal or not. By default, Globus cannot transfer a file between two personal endpoints. The default value is False'),
        ),
        migrations.AlterField(
            model_name='datarepository',
            name='globus_path',
            field=models.CharField(blank=True, help_text='relative root path to the repository on the server, without the hostname. e.g. /lab/data/Adaptation', max_length=1000),
        ),
        migrations.AlterField(
            model_name='datarepository',
            name='name',
            field=models.CharField(help_text='Nickname of the repository, to identify it', max_length=255, unique=True),
        ),
    ]
