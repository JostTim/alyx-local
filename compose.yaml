services:

  django_server:
    restart: always
    build:
      context: .
      dockerfile: ./config/django_server/Dockerfile
    image: alyx_django_server:latest
    container_name: django_server
    hostname: 'django_server'
    volumes :
      - uploaded-data:/app/uploaded
      - ./config/postgres_db/db-secure-password:/run/secrets/db-secure-password:ro
      - ./src:/app/src:rw
      - ./data:/app/data:rw
    environment : 
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-secure-password
    expose:
      - 8000
    depends_on:
      db:
        condition: service_healthy

  nginx_server:
    image: nginx:latest
    container_name: nginx_server
    hostname: 'nginx_server'
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - uploaded-data:/app/uploaded
      - ./config/nginx_server/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - django_server

  db:
    image: postgres:17
    container_name: postgres_db
    hostname: 'postgres_db'
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./config/postgres_db/db-secure-password:/run/secrets/db-secure-password:ro
    environment:
      - POSTGRES_DB=alyx
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-secure-password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    hostname: 'pgadmin'
    environment:
      - SCRIPT_NAME=/services/pgadmin
      - PGADMIN_SERVER_JSON_FILE=/pgadmin4/servers.json
    env_file:
      - ./config/pgadmin/pgadmin.env
    expose:
      - 80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./config/pgadmin/servers.json:/pgadmin4/servers.json:ro
    depends_on:
      db:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq
    hostname: 'rabbitmq'
    ports: 
      - "${RABBITMQ_PORT:-5672}:5672"
    expose :
      - 15672
    environment:
      - RABBITMQ_MANAGEMENT_PATH_PREFIX=/services/rabbitmq
    volumes: 
      - rabbitmq-data:/var/lib/rabbitmq
      - ./config/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  celery_server:
    build:
        context: .
        dockerfile: ./config/celery_server/Dockerfile
    image: celery_flower:latest
    container_name: celery_server
    hostname: 'celery_server'
    expose:
      - 5001
      - 5555
    env_file:
      - ./config/celery_server/celery.env
    depends_on:
      - rabbitmq


volumes:
  pgadmin-data:
  db-data:
  rabbitmq-data:
  uploaded-data: