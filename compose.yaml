# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  django_server:
    build:
      context: .
    volumes :
      - uploaded_volume:/app/uploaded
      - static_volume:/app/uploaded/static
      - media_volume:/app/uploaded/media
    secrets:
      - db-password
    expose:
      - 8000
    depends_on:
      db:
        condition: service_healthy

  nginx_server:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - static_volume:/app/uploaded/static
      - media_volume:/app/uploaded/media
      - ./.production/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - django_server



  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=alyx
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

secrets:
  db-password:
    file: ./.production/db_password.txt

volumes:
  uploaded_volume:
  db-data:
  static_volume:
  media_volume:

